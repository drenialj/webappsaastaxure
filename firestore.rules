rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Hilfsfunktionen
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isKanzlei() {
      return isAuthenticated() && getUserData(request.auth.uid).role == "Kanzlei";
    }

    function isMandant() {
      return isAuthenticated() && getUserData(request.auth.uid).role == "Mandant";
    }

    function isAssignedKanzlei(mandantId) {
      let mandantData = getUserData(mandantId);
      return mandantData != null && mandantData.kanzleiId == request.auth.uid;
    }

    // Validierungsfunktionen für Create/Update
    function isValidUserData(data) {
      return data.keys().hasAll(['email', 'role', 'createdAt']) &&
             (data.role == 'Mandant' || data.role == 'Kanzlei') &&
             (data.role == 'Kanzlei' || (data.role == 'Mandant' && data.keys().hasAll(['kanzleiId'])));
    }

    function isValidDocumentData(data) {
      return data.keys().hasAll(['filename', 'fileUrl', 'uploadedAt']);
    }

    // Benutzerprofil-Regeln
    match /users/{userId} {
      // Eigenes Profil lesen und aktualisieren
      allow read, update: if isOwner(userId);
      
      // Neues Profil erstellen
      allow create: if isAuthenticated() &&
                     isValidUserData(request.resource.data) &&
                     request.auth.uid == userId;

      // Kanzlei darf Mandanten-Profile lesen
      allow read: if isKanzlei() && 
                    resource.data.role == "Mandant" &&
                    resource.data.kanzleiId == request.auth.uid;
    }

    // Dokumente-Subcollection-Regeln
    match /users/{userId}/documents/{documentId} {
      // Mandant: Voller Zugriff auf eigene Dokumente
      allow read, write: if isOwner(userId) && isMandant();

      // Mandant: Validierung beim Erstellen/Aktualisieren
      allow create, update: if isOwner(userId) &&
                             isMandant() &&
                             isValidDocumentData(request.resource.data);

      // Kanzlei: Lesezugriff auf Dokumente ihrer Mandanten
      allow read: if isKanzlei() && isAssignedKanzlei(userId);

      // Löschen nur durch Eigentümer
      allow delete: if isOwner(userId) && isMandant();
    }

    // Globale Deny-Rule für alle anderen Pfade
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 